program             : statementList

statementList       : statement
                    | statement statementList

statement           : expression SEMI
                    | ifStatement
                    | whileLoop
                    | variableDef
                    | functionDef

expression          : unary
                    | unary operator expression
                    | lambda

operator            : PLUS
                    | MINUS
                    | TIMES
                    | DIVIDE
                    | POWER
                    | EQUALS // ==
                    | ASSIGN // =
                    | AND
                    | OR
                    | GT
                    | GTE
                    | LT
                    | LTE

unary               : NUMBER
                    | STRING
                    | variable
                    | variable OBRACKET unary CBRACKET // array access
                    | OPAREN expression CPAREN OBRACKET unary CBRACKET // array access
                    | OPAREN expression CPAREN
                    | MINUS unary
                    | NOT unary
                    | DELAY unary // @ unary
                    | OPAREN expression CPAREN args // fn call
                    | variable args // fn call

variable            : ID
                    | ID DOT variable

args                : OPAREN optExpressionList CPAREN

optExpressionList   : *empty*
                    | expressionList

expressionList      : expression
                    | expression COMMA expressionList

block               : OBRACE statementList CBRACE
                    | statement

conditional         : OPAREN expression CPAREN

ifStatement         : IF conditional block optElse

optElse             : *empty*
                    : ELSE block

whileLoop           : WHILE conditional block

variableDef         : VAR variable ASSIGN expression SEMI

functionDef         : DEF variable OPAREN optIdList CPAREN block

lambda              : LAMBDA OPAREN optIdList CPAREN block

optIdList           : *empty*
                    | idList

idList              : ID
                    | ID  COMMA idList
